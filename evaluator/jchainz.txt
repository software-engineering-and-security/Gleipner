[
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashSet: void readObject(java.io.ObjectInputStream)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: int hash(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: int hashCode()>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: java.lang.Object getValue()>
 <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.cc1.LazyMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.falsepositive.aspectj_fp.StoreableCachingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.core.Controller: void invokeSink(java.lang.String)>
]

[
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashSet: void readObject(java.io.ObjectInputStream)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: int hash(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: int hashCode()>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: java.lang.Object getValue()>
 <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.LazyMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.falsepositive.aspectj_fp.StoreableCachingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.core.Controller: void invokeSink(java.lang.String)>
]

[
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashSet: void readObject(java.io.ObjectInputStream)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: int hash(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: int hashCode()>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: java.lang.Object getValue()>
 <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.LazyMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.falsepositive.aspectj_fp.StoreableCachingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.core.Controller: void invokeSink(java.lang.String)>
]

[
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashSet: void readObject(java.io.ObjectInputStream)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: int hash(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: int hashCode()>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: java.lang.Object getValue()>
 <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.LazyMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.AbstractMapDecorator: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.falsepositive.aspectj_fp.StoreableCachingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.core.Controller: void invokeSink(java.lang.String)>
]

[
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashSet: void readObject(java.io.ObjectInputStream)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: int hash(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: int hashCode()>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: java.lang.Object getValue()>
 <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.cc1.LazyMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.LazyMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.falsepositive.aspectj_fp.StoreableCachingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.core.Controller: void invokeSink(java.lang.String)>
]

[
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashSet: void readObject(java.io.ObjectInputStream)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: int hash(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: int hashCode()>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: java.lang.Object getValue()>
 <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.LazyMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.cc1.LazyMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.falsepositive.aspectj_fp.StoreableCachingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.core.Controller: void invokeSink(java.lang.String)>
]

[
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashSet: void readObject(java.io.ObjectInputStream)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: int hash(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: int hashCode()>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: java.lang.Object getValue()>
 <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.cc1.LazyMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$CheckedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.falsepositive.aspectj_fp.StoreableCachingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.core.Controller: void invokeSink(java.lang.String)>
]

[
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashSet: void readObject(java.io.ObjectInputStream)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: int hash(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: int hashCode()>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: java.lang.Object getValue()>
 <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.cc1.LazyMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.falsepositive.aspectj_fp.StoreableCachingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.core.Controller: void invokeSink(java.lang.String)>
]

[
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashSet: void readObject(java.io.ObjectInputStream)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: int hash(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: int hashCode()>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: java.lang.Object getValue()>
 <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.LazyMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.falsepositive.aspectj_fp.StoreableCachingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.core.Controller: void invokeSink(java.lang.String)>
]

[
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashSet: void readObject(java.io.ObjectInputStream)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: int hash(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: int hashCode()>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: java.lang.Object getValue()>
 <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.cc1.LazyMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.falsepositive.aspectj_fp.StoreableCachingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.core.Controller: void invokeSink(java.lang.String)>
]

[
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashSet: void readObject(java.io.ObjectInputStream)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.AspectJWeaver_HashMap: int hash(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: int hashCode()>
 <gleipner.chains.ysoserial.aspectjweaver.TiedMapEntry: java.lang.Object getValue()>
 <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)>
 <gleipner.chains.ysoserial.aspectjweaver.LazyMap: java.lang.Object get(java.lang.Object)>
 <java.util.Collections$CheckedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.chains.falsepositive.aspectj_fp.StoreableCachingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
 <gleipner.core.Controller: void invokeSink(java.lang.String)>
]

[
 <gleipner.chains.basic.BasicTriggerGadget: void readObject(java.io.ObjectInputStream)>
 <gleipner.core.Controller: void invokeSink(java.lang.String)>
]