<org.apache.commons.collections.collection.TransformedCollection: java.lang.Object transform(java.lang.Object)>
<org.apache.commons.collections.collection.TransformedCollection: boolean add(java.lang.Object)>
<org.apache.commons.collections.comparators.ReverseComparator: int hashCode()>
<org.apache.commons.collections.comparators.ReverseComparator: boolean equals(java.lang.Object)>
<org.apache.commons.collections.functors.PrototypeFactory$PrototypeSerializationFactory: java.lang.Object create()>
<org.apache.commons.collections.functors.ChainedTransformer: java.lang.Object transform(java.lang.Object)>
<org.apache.commons.collections.functors.IdentityPredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.buffer.BlockingBuffer: boolean add(java.lang.Object)>
<org.apache.commons.collections.FastHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.FastHashMap: java.lang.Object remove(java.lang.Object)>
<org.apache.commons.collections.FastHashMap: boolean containsKey(java.lang.Object)>
<org.apache.commons.collections.FastHashMap: java.lang.Object get(java.lang.Object)>
<org.apache.commons.collections.FastTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.FastTreeMap: java.lang.Object get(java.lang.Object)>
<org.apache.commons.collections.FastTreeMap: boolean containsKey(java.lang.Object)>
<org.apache.commons.collections.FastTreeMap: void <init>(java.util.SortedMap)>
<org.apache.commons.collections.FastTreeMap: int size()>
<org.apache.commons.collections.FastTreeMap: boolean equals(java.lang.Object)>
<org.apache.commons.collections.FastTreeMap: int hashCode()>
<org.apache.commons.collections.FastTreeMap: java.lang.Object clone()>
<org.apache.commons.collections.list.SetUniqueList: boolean add(java.lang.Object)>
<org.apache.commons.collections.list.SetUniqueList: void add(int,java.lang.Object)>
<org.apache.commons.collections.list.SetUniqueList: boolean contains(java.lang.Object)>
<org.apache.commons.collections.collection.SynchronizedCollection: boolean contains(java.lang.Object)>
<org.apache.commons.collections.collection.SynchronizedCollection: boolean equals(java.lang.Object)>
<org.apache.commons.collections.collection.SynchronizedCollection: boolean add(java.lang.Object)>
<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Iterator iterator()>
<org.apache.commons.collections.collection.SynchronizedCollection: int hashCode()>
<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.String toString()>
<org.apache.commons.collections.functors.NullIsExceptionPredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.functors.TransformerPredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.functors.ForClosure: void execute(java.lang.Object)>
<org.apache.commons.collections.LRUMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.LRUMap: java.lang.Object get(java.lang.Object)>
<org.apache.commons.collections.functors.PrototypeFactory$PrototypeCloneFactory: void findCloneMethod()>
<org.apache.commons.collections.functors.PrototypeFactory$PrototypeCloneFactory: java.lang.Object create()>
<org.apache.commons.collections.list.TransformedList: java.util.ListIterator listIterator()>
<org.apache.commons.collections.list.TransformedList: java.util.ListIterator listIterator(int)>
<org.apache.commons.collections.set.ListOrderedSet: boolean add(java.lang.Object)>
<org.apache.commons.collections.functors.StringValueTransformer: java.lang.Object transform(java.lang.Object)>
<org.apache.commons.collections.functors.WhileClosure: void execute(java.lang.Object)>
<org.apache.commons.collections.SequencedHashMap: java.lang.Object get(java.lang.Object)>
<org.apache.commons.collections.SequencedHashMap: java.lang.Object remove(java.lang.Object)>
<org.apache.commons.collections.SequencedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.SequencedHashMap: boolean containsKey(java.lang.Object)>
<org.apache.commons.collections.SequencedHashMap: org.apache.commons.collections.SequencedHashMap$Entry removeImpl(java.lang.Object)>
<org.apache.commons.collections.set.UnmodifiableSet: java.util.Set decorate(java.util.Set)>
<org.apache.commons.collections.set.UnmodifiableSet: java.util.Iterator iterator()>
<org.apache.commons.collections.functors.IfClosure: void execute(java.lang.Object)>
<org.apache.commons.collections.functors.TransformedPredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.list.UnmodifiableList: java.util.Iterator iterator()>
<org.apache.commons.collections.list.UnmodifiableList: java.util.ListIterator listIterator()>
<org.apache.commons.collections.list.UnmodifiableList: java.util.ListIterator listIterator(int)>
<org.apache.commons.collections.map.SingletonMap$SingletonValues: boolean contains(java.lang.Object)>
<org.apache.commons.collections.map.SingletonMap$SingletonValues: java.util.Iterator iterator()>
<org.apache.commons.collections.list.CursorableLinkedList: void registerCursor(org.apache.commons.collections.list.CursorableLinkedList$Cursor)>
<org.apache.commons.collections.list.CursorableLinkedList: java.util.ListIterator listIterator()>
<org.apache.commons.collections.list.CursorableLinkedList: java.util.ListIterator listIterator(int)>
<org.apache.commons.collections.list.CursorableLinkedList: org.apache.commons.collections.list.CursorableLinkedList$Cursor cursor(int)>
<org.apache.commons.collections.comparators.NullComparator: int hashCode()>
<org.apache.commons.collections.comparators.NullComparator: boolean equals(java.lang.Object)>
<org.apache.commons.collections.functors.InstantiateTransformer: java.lang.Object transform(java.lang.Object)>
<org.apache.commons.collections.functors.AnyPredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.functors.ConstantFactory: java.lang.Object create()>
<org.apache.commons.collections.map.TransformedMap: java.lang.Object transformKey(java.lang.Object)>
<org.apache.commons.collections.map.TransformedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.map.TransformedMap: java.lang.Object transformValue(java.lang.Object)>
<org.apache.commons.collections.functors.NullIsFalsePredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.functors.InstantiateFactory: void findConstructor()>
<org.apache.commons.collections.functors.InstantiateFactory: java.lang.Object create()>
<org.apache.commons.collections.list.PredicatedList: java.util.ListIterator listIterator()>
<org.apache.commons.collections.list.PredicatedList: java.util.ListIterator listIterator(int)>
<org.apache.commons.collections.keyvalue.TiedMapEntry: java.lang.Object setValue(java.lang.Object)>
<org.apache.commons.collections.keyvalue.TiedMapEntry: void <init>(java.util.Map,java.lang.Object)>
<org.apache.commons.collections.keyvalue.TiedMapEntry: java.lang.Object getKey()>
<org.apache.commons.collections.keyvalue.TiedMapEntry: java.lang.Object getValue()>
<org.apache.commons.collections.keyvalue.TiedMapEntry: boolean equals(java.lang.Object)>
<org.apache.commons.collections.keyvalue.TiedMapEntry: int hashCode()>
<org.apache.commons.collections.collection.PredicatedCollection: boolean add(java.lang.Object)>
<org.apache.commons.collections.collection.PredicatedCollection: void validate(java.lang.Object)>
<org.apache.commons.collections.list.FixedSizeList: java.util.Iterator iterator()>
<org.apache.commons.collections.list.FixedSizeList: java.util.ListIterator listIterator()>
<org.apache.commons.collections.list.FixedSizeList: java.util.ListIterator listIterator(int)>
<org.apache.commons.collections.MultiHashMap: java.util.Collection getCollection(java.lang.Object)>
<org.apache.commons.collections.MultiHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.MultiHashMap: java.util.Collection createCollection(java.util.Collection)>
<org.apache.commons.collections.functors.NullIsTruePredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.list.SynchronizedList: java.util.ListIterator listIterator()>
<org.apache.commons.collections.list.SynchronizedList: java.util.ListIterator listIterator(int)>
<org.apache.commons.collections.map.ListOrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.functors.AndPredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.functors.UniquePredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.functors.InvokerTransformer: java.lang.Object transform(java.lang.Object)>
<org.apache.commons.collections.functors.NotPredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.functors.ChainedClosure: void execute(java.lang.Object)>
<org.apache.commons.collections.set.MapBackedSet: boolean equals(java.lang.Object)>
<org.apache.commons.collections.set.MapBackedSet: boolean add(java.lang.Object)>
<org.apache.commons.collections.set.MapBackedSet: boolean contains(java.lang.Object)>
<org.apache.commons.collections.set.MapBackedSet: java.util.Iterator iterator()>
<org.apache.commons.collections.set.MapBackedSet: int hashCode()>
<org.apache.commons.collections.map.MultiKeyMap: boolean containsKey(java.lang.Object)>
<org.apache.commons.collections.map.MultiKeyMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.map.MultiKeyMap: java.lang.Object get(java.lang.Object)>
<org.apache.commons.collections.map.MultiKeyMap: boolean equals(java.lang.Object)>
<org.apache.commons.collections.CursorableLinkedList: boolean add(java.lang.Object)>
<org.apache.commons.collections.functors.AllPredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.functors.InstanceofPredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.collection.UnmodifiableCollection: java.util.Iterator iterator()>
<org.apache.commons.collections.functors.SwitchClosure: void execute(java.lang.Object)>
<org.apache.commons.collections.map.FixedSizeSortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.map.SingletonMap: boolean containsKey(java.lang.Object)>
<org.apache.commons.collections.map.SingletonMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.map.SingletonMap: java.lang.Object get(java.lang.Object)>
<org.apache.commons.collections.map.SingletonMap: boolean containsValue(java.lang.Object)>
<org.apache.commons.collections.map.SingletonMap: java.lang.Object getKey()>
<org.apache.commons.collections.map.SingletonMap: java.lang.Object getValue()>
<org.apache.commons.collections.map.SingletonMap: java.lang.Object setValue(java.lang.Object)>
<org.apache.commons.collections.map.SingletonMap: java.util.Set entrySet()>
<org.apache.commons.collections.map.SingletonMap: java.util.Set keySet()>
<org.apache.commons.collections.map.SingletonMap: boolean isEqualKey(java.lang.Object)>
<org.apache.commons.collections.map.SingletonMap: boolean isEqualValue(java.lang.Object)>
<org.apache.commons.collections.map.SingletonMap: boolean equals(java.lang.Object)>
<org.apache.commons.collections.map.SingletonMap: int hashCode()>
<org.apache.commons.collections.map.FixedSizeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.functors.ClosureTransformer: java.lang.Object transform(java.lang.Object)>
<org.apache.commons.collections.comparators.ComparatorChain: int hashCode()>
<org.apache.commons.collections.comparators.ComparatorChain: boolean equals(java.lang.Object)>
<org.apache.commons.collections.functors.OrPredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.functors.TransformerClosure: void execute(java.lang.Object)>
<org.apache.commons.collections.functors.PredicateTransformer: java.lang.Object transform(java.lang.Object)>
<org.apache.commons.collections.map.Flat3Map: java.lang.Object get(java.lang.Object)>
<org.apache.commons.collections.map.Flat3Map: boolean containsKey(java.lang.Object)>
<org.apache.commons.collections.map.Flat3Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.map.Flat3Map: boolean equals(java.lang.Object)>
<org.apache.commons.collections.functors.NonePredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.functors.SwitchTransformer: java.lang.Object transform(java.lang.Object)>
<org.apache.commons.collections.map.LazyMap: java.lang.Object get(java.lang.Object)>
<org.apache.commons.collections.map.PredicatedMap: void validate(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.map.PredicatedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.commons.collections.buffer.CircularFifoBuffer: boolean add(java.lang.Object)>
<org.apache.commons.collections.functors.FactoryTransformer: java.lang.Object transform(java.lang.Object)>
<org.apache.commons.collections.FastArrayList: boolean contains(java.lang.Object)>
<org.apache.commons.collections.FastArrayList: boolean add(java.lang.Object)>
<org.apache.commons.collections.FastArrayList: void <init>(java.util.Collection)>
<org.apache.commons.collections.FastArrayList: java.lang.Object clone()>
<org.apache.commons.collections.FastArrayList: boolean equals(java.lang.Object)>
<org.apache.commons.collections.FastArrayList: int hashCode()>
<org.apache.commons.collections.FastArrayList: java.util.Iterator iterator()>
<org.apache.commons.collections.FastArrayList: java.util.ListIterator listIterator()>
<org.apache.commons.collections.FastArrayList: java.util.ListIterator listIterator(int)>
<org.apache.commons.collections.FastArrayList: java.lang.String toString()>
<org.apache.commons.collections.functors.MapTransformer: java.lang.Object transform(java.lang.Object)>
<org.apache.commons.collections.functors.CloneTransformer: java.lang.Object transform(java.lang.Object)>
<org.apache.commons.collections.functors.OnePredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.functors.EqualPredicate: boolean evaluate(java.lang.Object)>
<org.apache.commons.collections.functors.ConstantTransformer: java.lang.Object transform(java.lang.Object)>
<org.apache.commons.collections.map.LRUMap: java.lang.Object get(java.lang.Object)>
