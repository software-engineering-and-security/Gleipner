[JNDI Gadget] <java.rmi.server.UnicastRemoteObject: void readObject(java.io.ObjectInputStream)>
 -> <java.rmi.server.UnicastRemoteObject: void reexport()>
 -> <java.rmi.server.UnicastRemoteObject: java.rmi.Remote exportObject(java.rmi.Remote,int)>
 -> <java.rmi.server.UnicastRemoteObject: java.rmi.Remote exportObject(java.rmi.Remote,sun.rmi.server.UnicastServerRef)>
 -> <sun.rmi.server.UnicastServerRef: java.rmi.Remote exportObject(java.rmi.Remote,java.lang.Object,boolean)>
 -> <sun.rmi.transport.LiveRef: void exportObject(sun.rmi.transport.Target)>

[JNDI Gadget] <sun.rmi.server.UnicastRef2: void readExternal(java.io.ObjectInput)>
 -> <sun.rmi.transport.LiveRef: sun.rmi.transport.LiveRef read(java.io.ObjectInput,boolean)>
 -> <sun.rmi.transport.DGCClient: void registerRefs(sun.rmi.transport.Endpoint,java.util.List)>
 -> <sun.rmi.transport.DGCClient$EndpointEntry: boolean registerRefs(java.util.List)>
 -> <sun.rmi.transport.DGCClient$EndpointEntry: void makeDirtyCall(java.util.Set,long)>
 -> <sun.rmi.transport.DGCImpl_Stub: java.rmi.dgc.Lease dirty(java.rmi.server.ObjID[],long,java.rmi.dgc.Lease)>
 -> <sun.rmi.server.UnicastRef: java.rmi.server.RemoteCall newCall(java.rmi.server.RemoteObject,java.rmi.server.Operation[],int,long)>
 -> <sun.rmi.transport.LiveRef: sun.rmi.transport.Channel getChannel()>

[JNDI Gadget] <sun.rmi.server.UnicastRef: void readExternal(java.io.ObjectInput)>
 -> <sun.rmi.transport.LiveRef: sun.rmi.transport.LiveRef read(java.io.ObjectInput,boolean)>
 -> <sun.rmi.transport.DGCClient: void registerRefs(sun.rmi.transport.Endpoint,java.util.List)>
 -> <sun.rmi.transport.DGCClient$EndpointEntry: boolean registerRefs(java.util.List)>
 -> <sun.rmi.transport.DGCClient$EndpointEntry: void makeDirtyCall(java.util.Set,long)>
 -> <sun.rmi.transport.DGCImpl_Stub: java.rmi.dgc.Lease dirty(java.rmi.server.ObjID[],long,java.rmi.dgc.Lease)>
 -> <sun.rmi.server.UnicastRef: java.rmi.server.RemoteCall newCall(java.rmi.server.RemoteObject,java.rmi.server.Operation[],int,long)>
 -> <sun.rmi.transport.LiveRef: sun.rmi.transport.Channel getChannel()>

